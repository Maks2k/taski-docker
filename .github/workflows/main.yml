name: Main TAski workflow

on:
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      postgress:
        image: postgres:13.10
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_password
          POSTRGES_DB: django_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      # В action setup-python@v4 передаём параметр — версию Python
      with:
        python-version: 3.12

    - name: Inatsll dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        pip install flake8==6.0.0 flake8-isort==6.0.0
        pip install -r ./backend/requirements.txt
    
    - name: Test with flake8 and django tests
      env:
        POSTGRES_USER: django_user
        POSTGRES_PASSWORD: django_password
        POSTGRES_DB: django_db
        DB_HOST: 127.0.0.1
        DB_PORT: 5432
      run: |
        python -m flake8 backend/
        cd backend/
        python manage.py test

  build_and_push_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
      #Установка сборщика контейнеров
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
      #Авторизация
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to dockerHub
        uses: docker/build-push-action@v4
        with:
         #где лежит нужный Файл 
          context: ./backend
          # Параметр push: true указывает, что образ нужно не только собрать,
          # но и отправить на Docker Hub
          push: true
          #В параметре tags задается название и тэг для образа
          #устанавливаем latest тобы потом не указывать версию
          tags: maks2k/taski_backend:latest

  frontend_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up nodeJS
        uses: actions/setup-node@v3
        with: 
          # Это параметр воркфлоу, указывающий нужную версию Node.js
          node-version: 18
      - name: Install dependencies

        run: |
          cd frontend/
          npm ci

      - name: Test frontend
       # Запускаем тесты
        run: |
          cd frontend/
          npm run test
